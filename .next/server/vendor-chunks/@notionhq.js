"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@notionhq";
exports.ids = ["vendor-chunks/@notionhq"];
exports.modules = {

/***/ "(rsc)/./node_modules/@notionhq/client/build/package.json":
/*!**********************************************************!*\
  !*** ./node_modules/@notionhq/client/build/package.json ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"name":"@notionhq/client","version":"4.0.2","description":"A simple and easy to use client for the Notion API","engines":{"node":">=18"},"homepage":"https://developers.notion.com/docs/getting-started","bugs":{"url":"https://github.com/makenotion/notion-sdk-js/issues"},"repository":{"type":"git","url":"https://github.com/makenotion/notion-sdk-js/"},"keywords":["notion","notionapi","rest","notion-api"],"main":"./build/src","types":"./build/src/index.d.ts","scripts":{"prepare":"npm run build","prepublishOnly":"npm run checkLoggedIn && npm run lint && npm run test","build":"tsc","prettier":"prettier --write .","lint":"prettier --check . && eslint . --ext .ts && cspell \'**/*\' ","test":"jest ./test","check-links":"git ls-files | grep md$ | xargs -n 1 markdown-link-check","prebuild":"npm run clean","clean":"rm -rf ./build","checkLoggedIn":"./scripts/verifyLoggedIn.sh"},"author":"","license":"MIT","files":["build/package.json","build/src/**"],"devDependencies":{"@types/jest":"28.1.4","@typescript-eslint/eslint-plugin":"5.39.0","@typescript-eslint/parser":"5.39.0","cspell":"5.4.1","eslint":"7.24.0","jest":"28.1.2","markdown-link-check":"3.13.7","prettier":"2.8.8","ts-jest":"28.0.5","typescript":"5.9.2"}}');

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/Client.js":
/*!***********************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/Client.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Client_auth, _Client_logLevel, _Client_logger, _Client_prefixUrl, _Client_timeoutMs, _Client_notionVersion, _Client_fetch, _Client_agent, _Client_userAgent;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst logging_1 = __webpack_require__(/*! ./logging */ \"(rsc)/./node_modules/@notionhq/client/build/src/logging.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@notionhq/client/build/src/errors.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@notionhq/client/build/src/utils.js\");\nconst api_endpoints_1 = __webpack_require__(/*! ./api-endpoints */ \"(rsc)/./node_modules/@notionhq/client/build/src/api-endpoints.js\");\nconst package_json_1 = __webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/@notionhq/client/build/package.json\");\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        _Client_auth.set(this, void 0);\n        _Client_logLevel.set(this, void 0);\n        _Client_logger.set(this, void 0);\n        _Client_prefixUrl.set(this, void 0);\n        _Client_timeoutMs.set(this, void 0);\n        _Client_notionVersion.set(this, void 0);\n        _Client_fetch.set(this, void 0);\n        _Client_agent.set(this, void 0);\n        _Client_userAgent.set(this, void 0);\n        /*\n         * Notion API endpoints\n         */\n        this.blocks = {\n            /**\n             * Retrieve block\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getBlock.path(args),\n                    method: api_endpoints_1.getBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update block\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateBlock.path(args),\n                    method: api_endpoints_1.updateBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Delete block\n             */\n            delete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.deleteBlock.path(args),\n                    method: api_endpoints_1.deleteBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            children: {\n                /**\n                 * Append block children\n                 */\n                append: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.appendBlockChildren.path(args),\n                        method: api_endpoints_1.appendBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n                /**\n                 * Retrieve block children\n                 */\n                list: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.listBlockChildren.path(args),\n                        method: api_endpoints_1.listBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.databases = {\n            /**\n             * List databases\n             *\n             * @deprecated Please use `search`\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listDatabases.path(),\n                    method: api_endpoints_1.listDatabases.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a database\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getDatabase.path(args),\n                    method: api_endpoints_1.getDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Query a database\n             */\n            query: (args) => {\n                return this.request({\n                    path: api_endpoints_1.queryDatabase.path(args),\n                    method: api_endpoints_1.queryDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Create a database\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createDatabase.path(),\n                    method: api_endpoints_1.createDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update a database\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateDatabase.path(args),\n                    method: api_endpoints_1.updateDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.pages = {\n            /**\n             * Create a page\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createPage.path(),\n                    method: api_endpoints_1.createPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a page\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getPage.path(args),\n                    method: api_endpoints_1.getPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update page properties\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updatePage.path(args),\n                    method: api_endpoints_1.updatePage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updatePage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updatePage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            properties: {\n                /**\n                 * Retrieve page property\n                 */\n                retrieve: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.getPageProperty.path(args),\n                        method: api_endpoints_1.getPageProperty.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.users = {\n            /**\n             * Retrieve a user\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getUser.path(args),\n                    method: api_endpoints_1.getUser.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getUser.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getUser.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List all users\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listUsers.path(),\n                    method: api_endpoints_1.listUsers.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listUsers.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listUsers.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Get details about bot\n             */\n            me: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getSelf.path(),\n                    method: api_endpoints_1.getSelf.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getSelf.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getSelf.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.comments = {\n            /**\n             * Create a comment\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createComment.path(),\n                    method: api_endpoints_1.createComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List comments\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listComments.path(),\n                    method: api_endpoints_1.listComments.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listComments.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listComments.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a comment\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getComment.path(args),\n                    method: api_endpoints_1.getComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.fileUploads = {\n            /**\n             * Create a file upload\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createFileUpload.path(),\n                    method: api_endpoints_1.createFileUpload.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createFileUpload.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createFileUpload.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a file upload\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getFileUpload.path(args),\n                    method: api_endpoints_1.getFileUpload.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getFileUpload.queryParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List file uploads\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listFileUploads.path(),\n                    method: api_endpoints_1.listFileUploads.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listFileUploads.queryParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Send a file upload\n             *\n             * Requires a `file_upload_id`, obtained from the `id` of the Create File\n             * Upload API response.\n             *\n             * The `file` parameter contains the raw file contents or Blob/File object\n             * under `file.data`, and an optional `file.filename` string.\n             *\n             * Supply a stringified `part_number` parameter when using file uploads\n             * in multi-part mode.\n             *\n             * This endpoint sends HTTP multipart/form-data instead of JSON parameters.\n             */\n            send: (args) => {\n                return this.request({\n                    path: api_endpoints_1.sendFileUpload.path(args),\n                    method: api_endpoints_1.sendFileUpload.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.sendFileUpload.queryParams),\n                    formDataParams: (0, utils_1.pick)(args, api_endpoints_1.sendFileUpload.formDataParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Complete a file upload\n             */\n            complete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.completeFileUpload.path(args),\n                    method: api_endpoints_1.completeFileUpload.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.completeFileUpload.queryParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        /**\n         * Search\n         */\n        this.search = (args) => {\n            return this.request({\n                path: api_endpoints_1.search.path(),\n                method: api_endpoints_1.search.method,\n                query: (0, utils_1.pick)(args, api_endpoints_1.search.queryParams),\n                body: (0, utils_1.pick)(args, api_endpoints_1.search.bodyParams),\n                auth: args === null || args === void 0 ? void 0 : args.auth,\n            });\n        };\n        this.oauth = {\n            /**\n             * Get token\n             */\n            token: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthToken.path(),\n                    method: api_endpoints_1.oauthToken.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n            /**\n             * Introspect token\n             */\n            introspect: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthIntrospect.path(),\n                    method: api_endpoints_1.oauthIntrospect.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthIntrospect.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthIntrospect.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n            /**\n             * Revoke token\n             */\n            revoke: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthRevoke.path(),\n                    method: api_endpoints_1.oauthRevoke.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthRevoke.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthRevoke.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n        };\n        __classPrivateFieldSet(this, _Client_auth, options === null || options === void 0 ? void 0 : options.auth, \"f\");\n        __classPrivateFieldSet(this, _Client_logLevel, (_a = options === null || options === void 0 ? void 0 : options.logLevel) !== null && _a !== void 0 ? _a : logging_1.LogLevel.WARN, \"f\");\n        __classPrivateFieldSet(this, _Client_logger, (_b = options === null || options === void 0 ? void 0 : options.logger) !== null && _b !== void 0 ? _b : (0, logging_1.makeConsoleLogger)(package_json_1.name), \"f\");\n        __classPrivateFieldSet(this, _Client_prefixUrl, `${(_c = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _c !== void 0 ? _c : \"https://api.notion.com\"}/v1/`, \"f\");\n        __classPrivateFieldSet(this, _Client_timeoutMs, (_d = options === null || options === void 0 ? void 0 : options.timeoutMs) !== null && _d !== void 0 ? _d : 60000, \"f\");\n        __classPrivateFieldSet(this, _Client_notionVersion, (_e = options === null || options === void 0 ? void 0 : options.notionVersion) !== null && _e !== void 0 ? _e : Client.defaultNotionVersion, \"f\");\n        __classPrivateFieldSet(this, _Client_fetch, (_f = options === null || options === void 0 ? void 0 : options.fetch) !== null && _f !== void 0 ? _f : fetch, \"f\");\n        __classPrivateFieldSet(this, _Client_agent, options === null || options === void 0 ? void 0 : options.agent, \"f\");\n        __classPrivateFieldSet(this, _Client_userAgent, `notionhq-client/${package_json_1.version}`, \"f\");\n    }\n    /**\n     * Sends a request.\n     */\n    async request(args) {\n        const { path, method, query, body, formDataParams, auth } = args;\n        this.log(logging_1.LogLevel.INFO, \"request start\", { method, path });\n        // If the body is empty, don't send the body in the HTTP request\n        const bodyAsJsonString = !body || Object.entries(body).length === 0\n            ? undefined\n            : JSON.stringify(body);\n        const url = new URL(`${__classPrivateFieldGet(this, _Client_prefixUrl, \"f\")}${path}`);\n        if (query) {\n            for (const [key, value] of Object.entries(query)) {\n                if (value !== undefined) {\n                    if (Array.isArray(value)) {\n                        for (const val of value) {\n                            url.searchParams.append(key, decodeURIComponent(val));\n                        }\n                    }\n                    else {\n                        url.searchParams.append(key, String(value));\n                    }\n                }\n            }\n        }\n        // Allow both client ID / client secret based auth as well as token based auth.\n        let authorizationHeader;\n        if (typeof auth === \"object\") {\n            // Client ID and secret based auth is **ONLY** supported when using the\n            // `/oauth/token` endpoint. If this is the case, handle formatting the\n            // authorization header as required by `Basic` auth.\n            const unencodedCredential = `${auth.client_id}:${auth.client_secret}`;\n            const encodedCredential = Buffer.from(unencodedCredential).toString(\"base64\");\n            authorizationHeader = { authorization: `Basic ${encodedCredential}` };\n        }\n        else {\n            // Otherwise format authorization header as `Bearer` token auth.\n            authorizationHeader = this.authAsHeaders(auth);\n        }\n        const headers = {\n            // Request-level custom additional headers can be provided, but\n            // don't allow them to override all other headers, e.g. the\n            // standard user agent.\n            ...args.headers,\n            ...authorizationHeader,\n            \"Notion-Version\": __classPrivateFieldGet(this, _Client_notionVersion, \"f\"),\n            \"user-agent\": __classPrivateFieldGet(this, _Client_userAgent, \"f\"),\n        };\n        if (bodyAsJsonString !== undefined) {\n            headers[\"content-type\"] = \"application/json\";\n        }\n        let formData;\n        if (formDataParams) {\n            delete headers[\"content-type\"];\n            formData = new FormData();\n            for (const [key, value] of Object.entries(formDataParams)) {\n                if (typeof value === \"string\") {\n                    formData.append(key, value);\n                }\n                else if (typeof value === \"object\") {\n                    formData.append(key, typeof value.data === \"object\"\n                        ? value.data\n                        : new Blob([value.data]), value.filename);\n                }\n            }\n        }\n        try {\n            const response = await errors_1.RequestTimeoutError.rejectAfterTimeout(__classPrivateFieldGet(this, _Client_fetch, \"f\").call(this, url.toString(), {\n                method: method.toUpperCase(),\n                headers,\n                body: bodyAsJsonString !== null && bodyAsJsonString !== void 0 ? bodyAsJsonString : formData,\n                agent: __classPrivateFieldGet(this, _Client_agent, \"f\"),\n            }), __classPrivateFieldGet(this, _Client_timeoutMs, \"f\"));\n            const responseText = await response.text();\n            if (!response.ok) {\n                throw (0, errors_1.buildRequestError)(response, responseText);\n            }\n            const responseJson = JSON.parse(responseText);\n            this.log(logging_1.LogLevel.INFO, \"request success\", { method, path });\n            return responseJson;\n        }\n        catch (error) {\n            if (!(0, errors_1.isNotionClientError)(error)) {\n                throw error;\n            }\n            // Log the error if it's one of our known error types\n            this.log(logging_1.LogLevel.WARN, \"request fail\", {\n                code: error.code,\n                message: error.message,\n            });\n            if ((0, errors_1.isHTTPResponseError)(error)) {\n                // The response body may contain sensitive information so it is logged separately at the DEBUG level\n                this.log(logging_1.LogLevel.DEBUG, \"failed response body\", {\n                    body: error.body,\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Emits a log message to the console.\n     *\n     * @param level The level for this message\n     * @param args Arguments to send to the console\n     */\n    log(level, message, extraInfo) {\n        if ((0, logging_1.logLevelSeverity)(level) >= (0, logging_1.logLevelSeverity)(__classPrivateFieldGet(this, _Client_logLevel, \"f\"))) {\n            __classPrivateFieldGet(this, _Client_logger, \"f\").call(this, level, message, extraInfo);\n        }\n    }\n    /**\n     * Transforms an API key or access token into a headers object suitable for an HTTP request.\n     *\n     * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n     * an empty object\n     *\n     * @param auth API key or access token\n     * @returns headers key-value object\n     */\n    authAsHeaders(auth) {\n        const headers = {};\n        const authHeaderValue = auth !== null && auth !== void 0 ? auth : __classPrivateFieldGet(this, _Client_auth, \"f\");\n        if (authHeaderValue !== undefined) {\n            headers[\"authorization\"] = `Bearer ${authHeaderValue}`;\n        }\n        return headers;\n    }\n}\n_Client_auth = new WeakMap(), _Client_logLevel = new WeakMap(), _Client_logger = new WeakMap(), _Client_prefixUrl = new WeakMap(), _Client_timeoutMs = new WeakMap(), _Client_notionVersion = new WeakMap(), _Client_fetch = new WeakMap(), _Client_agent = new WeakMap(), _Client_userAgent = new WeakMap();\nClient.defaultNotionVersion = \"2022-06-28\";\nexports[\"default\"] = Client;\n//# sourceMappingURL=Client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/Client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/api-endpoints.js":
/*!******************************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/api-endpoints.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// cspell:disable-file\n// Note: This is a generated file. DO NOT EDIT!\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.oauthIntrospect = exports.oauthRevoke = exports.oauthToken = exports.getFileUpload = exports.completeFileUpload = exports.sendFileUpload = exports.listFileUploads = exports.createFileUpload = exports.getComment = exports.listComments = exports.createComment = exports.search = exports.createDatabase = exports.listDatabases = exports.queryDatabase = exports.updateDatabase = exports.getDatabase = exports.appendBlockChildren = exports.listBlockChildren = exports.deleteBlock = exports.updateBlock = exports.getBlock = exports.getPageProperty = exports.updatePage = exports.getPage = exports.createPage = exports.listUsers = exports.getUser = exports.getSelf = void 0;\n/**\n * Retrieve your token's bot user\n */\nexports.getSelf = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [],\n    path: () => `users/me`,\n};\n/**\n * Retrieve a user\n */\nexports.getUser = {\n    method: \"get\",\n    pathParams: [\"user_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `users/${p.user_id}`,\n};\n/**\n * List all users\n */\nexports.listUsers = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `users`,\n};\n/**\n * Create a page\n */\nexports.createPage = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n    path: () => `pages`,\n};\n/**\n * Retrieve a page\n */\nexports.getPage = {\n    method: \"get\",\n    pathParams: [\"page_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}`,\n};\n/**\n * Update page properties\n */\nexports.updatePage = {\n    method: \"patch\",\n    pathParams: [\"page_id\"],\n    queryParams: [],\n    bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\", \"in_trash\"],\n    path: (p) => `pages/${p.page_id}`,\n};\n/**\n * Retrieve a page property item\n */\nexports.getPageProperty = {\n    method: \"get\",\n    pathParams: [\"page_id\", \"property_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}/properties/${p.property_id}`,\n};\n/**\n * Retrieve a block\n */\nexports.getBlock = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\n/**\n * Update a block\n */\nexports.updateBlock = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"embed\",\n        \"type\",\n        \"archived\",\n        \"in_trash\",\n        \"bookmark\",\n        \"image\",\n        \"video\",\n        \"pdf\",\n        \"file\",\n        \"audio\",\n        \"code\",\n        \"equation\",\n        \"divider\",\n        \"breadcrumb\",\n        \"table_of_contents\",\n        \"link_to_page\",\n        \"table_row\",\n        \"heading_1\",\n        \"heading_2\",\n        \"heading_3\",\n        \"paragraph\",\n        \"bulleted_list_item\",\n        \"numbered_list_item\",\n        \"quote\",\n        \"to_do\",\n        \"toggle\",\n        \"template\",\n        \"callout\",\n        \"synced_block\",\n        \"table\",\n        \"column\",\n    ],\n    path: (p) => `blocks/${p.block_id}`,\n};\n/**\n * Delete a block\n */\nexports.deleteBlock = {\n    method: \"delete\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\n/**\n * Retrieve block children\n */\nexports.listBlockChildren = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\n/**\n * Append block children\n */\nexports.appendBlockChildren = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\"children\", \"after\"],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\n/**\n * Retrieve a database\n */\nexports.getDatabase = {\n    method: \"get\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `databases/${p.database_id}`,\n};\n/**\n * Update a database\n */\nexports.updateDatabase = {\n    method: \"patch\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"title\",\n        \"description\",\n        \"icon\",\n        \"cover\",\n        \"properties\",\n        \"is_inline\",\n        \"archived\",\n        \"in_trash\",\n    ],\n    path: (p) => `databases/${p.database_id}`,\n};\n/**\n * Query a database\n */\nexports.queryDatabase = {\n    method: \"post\",\n    pathParams: [\"database_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [\n        \"sorts\",\n        \"filter\",\n        \"start_cursor\",\n        \"page_size\",\n        \"archived\",\n        \"in_trash\",\n    ],\n    path: (p) => `databases/${p.database_id}/query`,\n};\n/**\n * List databases\n */\nexports.listDatabases = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `databases`,\n};\n/**\n * Create a database\n */\nexports.createDatabase = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"parent\",\n        \"properties\",\n        \"icon\",\n        \"cover\",\n        \"title\",\n        \"description\",\n        \"is_inline\",\n    ],\n    path: () => `databases`,\n};\n/**\n * Search by title\n */\nexports.search = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n    path: () => `search`,\n};\n/**\n * Create a comment\n */\nexports.createComment = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"rich_text\",\n        \"attachments\",\n        \"display_name\",\n        \"parent\",\n        \"discussion_id\",\n    ],\n    path: () => `comments`,\n};\n/**\n * List comments\n */\nexports.listComments = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `comments`,\n};\n/**\n * Retrieve a comment\n */\nexports.getComment = {\n    method: \"get\",\n    pathParams: [\"comment_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `comments/${p.comment_id}`,\n};\n/**\n * Create a file upload\n */\nexports.createFileUpload = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"mode\",\n        \"filename\",\n        \"content_type\",\n        \"number_of_parts\",\n        \"external_url\",\n    ],\n    path: () => `file_uploads`,\n};\n/**\n * List file uploads\n */\nexports.listFileUploads = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"status\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `file_uploads`,\n};\n/**\n * Upload a file\n */\nexports.sendFileUpload = {\n    method: \"post\",\n    pathParams: [\"file_upload_id\"],\n    queryParams: [],\n    bodyParams: [],\n    formDataParams: [\"file\", \"part_number\"],\n    path: (p) => `file_uploads/${p.file_upload_id}/send`,\n};\n/**\n * Complete a multi-part file upload\n */\nexports.completeFileUpload = {\n    method: \"post\",\n    pathParams: [\"file_upload_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `file_uploads/${p.file_upload_id}/complete`,\n};\n/**\n * Retrieve a file upload\n */\nexports.getFileUpload = {\n    method: \"get\",\n    pathParams: [\"file_upload_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `file_uploads/${p.file_upload_id}`,\n};\n/**\n * Exchange an authorization code for an access and refresh token\n */\nexports.oauthToken = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"grant_type\",\n        \"code\",\n        \"redirect_uri\",\n        \"external_account\",\n        \"refresh_token\",\n    ],\n    path: () => `oauth/token`,\n};\n/**\n * Revoke a token\n */\nexports.oauthRevoke = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"token\"],\n    path: () => `oauth/revoke`,\n};\n/**\n * Introspect a token\n */\nexports.oauthIntrospect = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"token\"],\n    path: () => `oauth/introspect`,\n};\n//# sourceMappingURL=api-endpoints.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/api-endpoints.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/errors.js":
/*!***********************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/errors.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.APIResponseError = exports.UnknownHTTPResponseError = exports.RequestTimeoutError = exports.ClientErrorCode = exports.APIErrorCode = void 0;\nexports.isNotionClientError = isNotionClientError;\nexports.isHTTPResponseError = isHTTPResponseError;\nexports.buildRequestError = buildRequestError;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@notionhq/client/build/src/utils.js\");\n/**\n * Error codes returned in responses from the API.\n */\nvar APIErrorCode;\n(function (APIErrorCode) {\n    APIErrorCode[\"Unauthorized\"] = \"unauthorized\";\n    APIErrorCode[\"RestrictedResource\"] = \"restricted_resource\";\n    APIErrorCode[\"ObjectNotFound\"] = \"object_not_found\";\n    APIErrorCode[\"RateLimited\"] = \"rate_limited\";\n    APIErrorCode[\"InvalidJSON\"] = \"invalid_json\";\n    APIErrorCode[\"InvalidRequestURL\"] = \"invalid_request_url\";\n    APIErrorCode[\"InvalidRequest\"] = \"invalid_request\";\n    APIErrorCode[\"ValidationError\"] = \"validation_error\";\n    APIErrorCode[\"ConflictError\"] = \"conflict_error\";\n    APIErrorCode[\"InternalServerError\"] = \"internal_server_error\";\n    APIErrorCode[\"ServiceUnavailable\"] = \"service_unavailable\";\n})(APIErrorCode || (exports.APIErrorCode = APIErrorCode = {}));\n/**\n * Error codes generated for client errors.\n */\nvar ClientErrorCode;\n(function (ClientErrorCode) {\n    ClientErrorCode[\"RequestTimeout\"] = \"notionhq_client_request_timeout\";\n    ClientErrorCode[\"ResponseError\"] = \"notionhq_client_response_error\";\n})(ClientErrorCode || (exports.ClientErrorCode = ClientErrorCode = {}));\n/**\n * Base error type.\n */\nclass NotionClientErrorBase extends Error {\n}\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nfunction isNotionClientError(error) {\n    return (0, utils_1.isObject)(error) && error instanceof NotionClientErrorBase;\n}\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode(error, codes) {\n    return isNotionClientError(error) && error.code in codes;\n}\n/**\n * Error thrown by the client if a request times out.\n */\nclass RequestTimeoutError extends NotionClientErrorBase {\n    constructor(message = \"Request to Notion API has timed out\") {\n        super(message);\n        this.code = ClientErrorCode.RequestTimeout;\n        this.name = \"RequestTimeoutError\";\n    }\n    static isRequestTimeoutError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.RequestTimeout]: true,\n        });\n    }\n    static rejectAfterTimeout(promise, timeoutMS) {\n        return new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                reject(new RequestTimeoutError());\n            }, timeoutMS);\n            promise\n                .then(resolve)\n                .catch(reject)\n                .then(() => clearTimeout(timeoutId));\n        });\n    }\n}\nexports.RequestTimeoutError = RequestTimeoutError;\nclass HTTPResponseError extends NotionClientErrorBase {\n    constructor(args) {\n        super(args.message);\n        this.name = \"HTTPResponseError\";\n        const { code, status, headers, rawBodyText } = args;\n        this.code = code;\n        this.status = status;\n        this.headers = headers;\n        this.body = rawBodyText;\n    }\n}\nconst httpResponseErrorCodes = {\n    [ClientErrorCode.ResponseError]: true,\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\nfunction isHTTPResponseError(error) {\n    if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n        return false;\n    }\n    return true;\n}\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nclass UnknownHTTPResponseError extends HTTPResponseError {\n    constructor(args) {\n        var _a;\n        super({\n            ...args,\n            code: ClientErrorCode.ResponseError,\n            message: (_a = args.message) !== null && _a !== void 0 ? _a : `Request to Notion API failed with status: ${args.status}`,\n        });\n        this.name = \"UnknownHTTPResponseError\";\n    }\n    static isUnknownHTTPResponseError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.ResponseError]: true,\n        });\n    }\n}\nexports.UnknownHTTPResponseError = UnknownHTTPResponseError;\nconst apiErrorCodes = {\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nclass APIResponseError extends HTTPResponseError {\n    constructor() {\n        super(...arguments);\n        this.name = \"APIResponseError\";\n    }\n    static isAPIResponseError(error) {\n        return isNotionClientErrorWithCode(error, apiErrorCodes);\n    }\n}\nexports.APIResponseError = APIResponseError;\nfunction buildRequestError(response, bodyText) {\n    const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText);\n    if (apiErrorResponseBody !== undefined) {\n        return new APIResponseError({\n            code: apiErrorResponseBody.code,\n            message: apiErrorResponseBody.message,\n            headers: response.headers,\n            status: response.status,\n            rawBodyText: bodyText,\n        });\n    }\n    return new UnknownHTTPResponseError({\n        message: undefined,\n        headers: response.headers,\n        status: response.status,\n        rawBodyText: bodyText,\n    });\n}\nfunction parseAPIErrorResponseBody(body) {\n    if (typeof body !== \"string\") {\n        return;\n    }\n    let parsed;\n    try {\n        parsed = JSON.parse(body);\n    }\n    catch (parseError) {\n        return;\n    }\n    if (!(0, utils_1.isObject)(parsed) ||\n        typeof parsed[\"message\"] !== \"string\" ||\n        !isAPIErrorCode(parsed[\"code\"])) {\n        return;\n    }\n    return {\n        ...parsed,\n        code: parsed[\"code\"],\n        message: parsed[\"message\"],\n    };\n}\nfunction isAPIErrorCode(code) {\n    return typeof code === \"string\" && code in apiErrorCodes;\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLGdDQUFnQyxHQUFHLDJCQUEyQixHQUFHLHVCQUF1QixHQUFHLG9CQUFvQjtBQUMxSSwyQkFBMkI7QUFDM0IsMkJBQTJCO0FBQzNCLHlCQUF5QjtBQUN6QixnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUJBQW1CLG9CQUFvQixvQkFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQix1QkFBdUIsdUJBQXVCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUNBQXFDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVIQUF1SCxZQUFZO0FBQ25JLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzLmJpbGxvcmRvXFxQeWNoYXJtUHJvamVjdHNcXFdoYXN0YXBwTm90aW9uXFxub2RlX21vZHVsZXNcXEBub3Rpb25ocVxcY2xpZW50XFxidWlsZFxcc3JjXFxlcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFQSVJlc3BvbnNlRXJyb3IgPSBleHBvcnRzLlVua25vd25IVFRQUmVzcG9uc2VFcnJvciA9IGV4cG9ydHMuUmVxdWVzdFRpbWVvdXRFcnJvciA9IGV4cG9ydHMuQ2xpZW50RXJyb3JDb2RlID0gZXhwb3J0cy5BUElFcnJvckNvZGUgPSB2b2lkIDA7XG5leHBvcnRzLmlzTm90aW9uQ2xpZW50RXJyb3IgPSBpc05vdGlvbkNsaWVudEVycm9yO1xuZXhwb3J0cy5pc0hUVFBSZXNwb25zZUVycm9yID0gaXNIVFRQUmVzcG9uc2VFcnJvcjtcbmV4cG9ydHMuYnVpbGRSZXF1ZXN0RXJyb3IgPSBidWlsZFJlcXVlc3RFcnJvcjtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbi8qKlxuICogRXJyb3IgY29kZXMgcmV0dXJuZWQgaW4gcmVzcG9uc2VzIGZyb20gdGhlIEFQSS5cbiAqL1xudmFyIEFQSUVycm9yQ29kZTtcbihmdW5jdGlvbiAoQVBJRXJyb3JDb2RlKSB7XG4gICAgQVBJRXJyb3JDb2RlW1wiVW5hdXRob3JpemVkXCJdID0gXCJ1bmF1dGhvcml6ZWRcIjtcbiAgICBBUElFcnJvckNvZGVbXCJSZXN0cmljdGVkUmVzb3VyY2VcIl0gPSBcInJlc3RyaWN0ZWRfcmVzb3VyY2VcIjtcbiAgICBBUElFcnJvckNvZGVbXCJPYmplY3ROb3RGb3VuZFwiXSA9IFwib2JqZWN0X25vdF9mb3VuZFwiO1xuICAgIEFQSUVycm9yQ29kZVtcIlJhdGVMaW1pdGVkXCJdID0gXCJyYXRlX2xpbWl0ZWRcIjtcbiAgICBBUElFcnJvckNvZGVbXCJJbnZhbGlkSlNPTlwiXSA9IFwiaW52YWxpZF9qc29uXCI7XG4gICAgQVBJRXJyb3JDb2RlW1wiSW52YWxpZFJlcXVlc3RVUkxcIl0gPSBcImludmFsaWRfcmVxdWVzdF91cmxcIjtcbiAgICBBUElFcnJvckNvZGVbXCJJbnZhbGlkUmVxdWVzdFwiXSA9IFwiaW52YWxpZF9yZXF1ZXN0XCI7XG4gICAgQVBJRXJyb3JDb2RlW1wiVmFsaWRhdGlvbkVycm9yXCJdID0gXCJ2YWxpZGF0aW9uX2Vycm9yXCI7XG4gICAgQVBJRXJyb3JDb2RlW1wiQ29uZmxpY3RFcnJvclwiXSA9IFwiY29uZmxpY3RfZXJyb3JcIjtcbiAgICBBUElFcnJvckNvZGVbXCJJbnRlcm5hbFNlcnZlckVycm9yXCJdID0gXCJpbnRlcm5hbF9zZXJ2ZXJfZXJyb3JcIjtcbiAgICBBUElFcnJvckNvZGVbXCJTZXJ2aWNlVW5hdmFpbGFibGVcIl0gPSBcInNlcnZpY2VfdW5hdmFpbGFibGVcIjtcbn0pKEFQSUVycm9yQ29kZSB8fCAoZXhwb3J0cy5BUElFcnJvckNvZGUgPSBBUElFcnJvckNvZGUgPSB7fSkpO1xuLyoqXG4gKiBFcnJvciBjb2RlcyBnZW5lcmF0ZWQgZm9yIGNsaWVudCBlcnJvcnMuXG4gKi9cbnZhciBDbGllbnRFcnJvckNvZGU7XG4oZnVuY3Rpb24gKENsaWVudEVycm9yQ29kZSkge1xuICAgIENsaWVudEVycm9yQ29kZVtcIlJlcXVlc3RUaW1lb3V0XCJdID0gXCJub3Rpb25ocV9jbGllbnRfcmVxdWVzdF90aW1lb3V0XCI7XG4gICAgQ2xpZW50RXJyb3JDb2RlW1wiUmVzcG9uc2VFcnJvclwiXSA9IFwibm90aW9uaHFfY2xpZW50X3Jlc3BvbnNlX2Vycm9yXCI7XG59KShDbGllbnRFcnJvckNvZGUgfHwgKGV4cG9ydHMuQ2xpZW50RXJyb3JDb2RlID0gQ2xpZW50RXJyb3JDb2RlID0ge30pKTtcbi8qKlxuICogQmFzZSBlcnJvciB0eXBlLlxuICovXG5jbGFzcyBOb3Rpb25DbGllbnRFcnJvckJhc2UgZXh0ZW5kcyBFcnJvciB7XG59XG4vKipcbiAqIEBwYXJhbSBlcnJvciBhbnkgdmFsdWUsIHVzdWFsbHkgYSBjYXVnaHQgZXJyb3IuXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgZXJyb3IgaXMgYSBgTm90aW9uQ2xpZW50RXJyb3JgLlxuICovXG5mdW5jdGlvbiBpc05vdGlvbkNsaWVudEVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuICgwLCB1dGlsc18xLmlzT2JqZWN0KShlcnJvcikgJiYgZXJyb3IgaW5zdGFuY2VvZiBOb3Rpb25DbGllbnRFcnJvckJhc2U7XG59XG4vKipcbiAqIE5hcnJvd3MgZG93biB0aGUgdHlwZXMgb2YgYSBOb3Rpb25DbGllbnRFcnJvci5cbiAqIEBwYXJhbSBlcnJvciBhbnkgdmFsdWUsIHVzdWFsbHkgYSBjYXVnaHQgZXJyb3IuXG4gKiBAcGFyYW0gY29kZXMgYW4gb2JqZWN0IG1hcHBpbmcgZnJvbSBwb3NzaWJsZSBlcnJvciBjb2RlcyB0byBgdHJ1ZWBcbiAqIEByZXR1cm5zIGB0cnVlYCBpZiBlcnJvciBpcyBhIGBOb3Rpb25DbGllbnRFcnJvcmAgd2l0aCBhIGNvZGUgaW4gYGNvZGVzYC5cbiAqL1xuZnVuY3Rpb24gaXNOb3Rpb25DbGllbnRFcnJvcldpdGhDb2RlKGVycm9yLCBjb2Rlcykge1xuICAgIHJldHVybiBpc05vdGlvbkNsaWVudEVycm9yKGVycm9yKSAmJiBlcnJvci5jb2RlIGluIGNvZGVzO1xufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gYnkgdGhlIGNsaWVudCBpZiBhIHJlcXVlc3QgdGltZXMgb3V0LlxuICovXG5jbGFzcyBSZXF1ZXN0VGltZW91dEVycm9yIGV4dGVuZHMgTm90aW9uQ2xpZW50RXJyb3JCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gXCJSZXF1ZXN0IHRvIE5vdGlvbiBBUEkgaGFzIHRpbWVkIG91dFwiKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLmNvZGUgPSBDbGllbnRFcnJvckNvZGUuUmVxdWVzdFRpbWVvdXQ7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiUmVxdWVzdFRpbWVvdXRFcnJvclwiO1xuICAgIH1cbiAgICBzdGF0aWMgaXNSZXF1ZXN0VGltZW91dEVycm9yKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBpc05vdGlvbkNsaWVudEVycm9yV2l0aENvZGUoZXJyb3IsIHtcbiAgICAgICAgICAgIFtDbGllbnRFcnJvckNvZGUuUmVxdWVzdFRpbWVvdXRdOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIHJlamVjdEFmdGVyVGltZW91dChwcm9taXNlLCB0aW1lb3V0TVMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgUmVxdWVzdFRpbWVvdXRFcnJvcigpKTtcbiAgICAgICAgICAgIH0sIHRpbWVvdXRNUyk7XG4gICAgICAgICAgICBwcm9taXNlXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgICAgICAuY2F0Y2gocmVqZWN0KVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0SWQpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXF1ZXN0VGltZW91dEVycm9yID0gUmVxdWVzdFRpbWVvdXRFcnJvcjtcbmNsYXNzIEhUVFBSZXNwb25zZUVycm9yIGV4dGVuZHMgTm90aW9uQ2xpZW50RXJyb3JCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdzKSB7XG4gICAgICAgIHN1cGVyKGFyZ3MubWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiSFRUUFJlc3BvbnNlRXJyb3JcIjtcbiAgICAgICAgY29uc3QgeyBjb2RlLCBzdGF0dXMsIGhlYWRlcnMsIHJhd0JvZHlUZXh0IH0gPSBhcmdzO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgdGhpcy5ib2R5ID0gcmF3Qm9keVRleHQ7XG4gICAgfVxufVxuY29uc3QgaHR0cFJlc3BvbnNlRXJyb3JDb2RlcyA9IHtcbiAgICBbQ2xpZW50RXJyb3JDb2RlLlJlc3BvbnNlRXJyb3JdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuVW5hdXRob3JpemVkXTogdHJ1ZSxcbiAgICBbQVBJRXJyb3JDb2RlLlJlc3RyaWN0ZWRSZXNvdXJjZV06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5PYmplY3ROb3RGb3VuZF06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5SYXRlTGltaXRlZF06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5JbnZhbGlkSlNPTl06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5JbnZhbGlkUmVxdWVzdFVSTF06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5JbnZhbGlkUmVxdWVzdF06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5WYWxpZGF0aW9uRXJyb3JdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuQ29uZmxpY3RFcnJvcl06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5JbnRlcm5hbFNlcnZlckVycm9yXTogdHJ1ZSxcbiAgICBbQVBJRXJyb3JDb2RlLlNlcnZpY2VVbmF2YWlsYWJsZV06IHRydWUsXG59O1xuZnVuY3Rpb24gaXNIVFRQUmVzcG9uc2VFcnJvcihlcnJvcikge1xuICAgIGlmICghaXNOb3Rpb25DbGllbnRFcnJvcldpdGhDb2RlKGVycm9yLCBodHRwUmVzcG9uc2VFcnJvckNvZGVzKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gaWYgYW4gQVBJIGNhbGwgcmVzcG9uZHMgd2l0aCBhbiB1bmtub3duIGVycm9yIGNvZGUsIG9yIGRvZXMgbm90IHJlc3BvbmQgd2l0aFxuICogYSBwcm9wZXJ0eS1mb3JtYXR0ZWQgZXJyb3IuXG4gKi9cbmNsYXNzIFVua25vd25IVFRQUmVzcG9uc2VFcnJvciBleHRlbmRzIEhUVFBSZXNwb25zZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgLi4uYXJncyxcbiAgICAgICAgICAgIGNvZGU6IENsaWVudEVycm9yQ29kZS5SZXNwb25zZUVycm9yLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9hID0gYXJncy5tZXNzYWdlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBgUmVxdWVzdCB0byBOb3Rpb24gQVBJIGZhaWxlZCB3aXRoIHN0YXR1czogJHthcmdzLnN0YXR1c31gLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJVbmtub3duSFRUUFJlc3BvbnNlRXJyb3JcIjtcbiAgICB9XG4gICAgc3RhdGljIGlzVW5rbm93bkhUVFBSZXNwb25zZUVycm9yKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBpc05vdGlvbkNsaWVudEVycm9yV2l0aENvZGUoZXJyb3IsIHtcbiAgICAgICAgICAgIFtDbGllbnRFcnJvckNvZGUuUmVzcG9uc2VFcnJvcl06IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5rbm93bkhUVFBSZXNwb25zZUVycm9yID0gVW5rbm93bkhUVFBSZXNwb25zZUVycm9yO1xuY29uc3QgYXBpRXJyb3JDb2RlcyA9IHtcbiAgICBbQVBJRXJyb3JDb2RlLlVuYXV0aG9yaXplZF06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5SZXN0cmljdGVkUmVzb3VyY2VdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuT2JqZWN0Tm90Rm91bmRdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuUmF0ZUxpbWl0ZWRdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuSW52YWxpZEpTT05dOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuSW52YWxpZFJlcXVlc3RVUkxdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuSW52YWxpZFJlcXVlc3RdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuVmFsaWRhdGlvbkVycm9yXTogdHJ1ZSxcbiAgICBbQVBJRXJyb3JDb2RlLkNvbmZsaWN0RXJyb3JdOiB0cnVlLFxuICAgIFtBUElFcnJvckNvZGUuSW50ZXJuYWxTZXJ2ZXJFcnJvcl06IHRydWUsXG4gICAgW0FQSUVycm9yQ29kZS5TZXJ2aWNlVW5hdmFpbGFibGVdOiB0cnVlLFxufTtcbi8qKlxuICogQSByZXNwb25zZSBmcm9tIHRoZSBBUEkgaW5kaWNhdGluZyBhIHByb2JsZW0uXG4gKiBVc2UgdGhlIGBjb2RlYCBwcm9wZXJ0eSB0byBoYW5kbGUgdmFyaW91cyBraW5kcyBvZiBlcnJvcnMuIEFsbCBpdHMgcG9zc2libGUgdmFsdWVzIGFyZSBpbiBgQVBJRXJyb3JDb2RlYC5cbiAqL1xuY2xhc3MgQVBJUmVzcG9uc2VFcnJvciBleHRlbmRzIEhUVFBSZXNwb25zZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBUElSZXNwb25zZUVycm9yXCI7XG4gICAgfVxuICAgIHN0YXRpYyBpc0FQSVJlc3BvbnNlRXJyb3IoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGlzTm90aW9uQ2xpZW50RXJyb3JXaXRoQ29kZShlcnJvciwgYXBpRXJyb3JDb2Rlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5BUElSZXNwb25zZUVycm9yID0gQVBJUmVzcG9uc2VFcnJvcjtcbmZ1bmN0aW9uIGJ1aWxkUmVxdWVzdEVycm9yKHJlc3BvbnNlLCBib2R5VGV4dCkge1xuICAgIGNvbnN0IGFwaUVycm9yUmVzcG9uc2VCb2R5ID0gcGFyc2VBUElFcnJvclJlc3BvbnNlQm9keShib2R5VGV4dCk7XG4gICAgaWYgKGFwaUVycm9yUmVzcG9uc2VCb2R5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBUElSZXNwb25zZUVycm9yKHtcbiAgICAgICAgICAgIGNvZGU6IGFwaUVycm9yUmVzcG9uc2VCb2R5LmNvZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBhcGlFcnJvclJlc3BvbnNlQm9keS5tZXNzYWdlLFxuICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgcmF3Qm9keVRleHQ6IGJvZHlUZXh0LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBVbmtub3duSFRUUFJlc3BvbnNlRXJyb3Ioe1xuICAgICAgICBtZXNzYWdlOiB1bmRlZmluZWQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICByYXdCb2R5VGV4dDogYm9keVRleHQsXG4gICAgfSk7XG59XG5mdW5jdGlvbiBwYXJzZUFQSUVycm9yUmVzcG9uc2VCb2R5KGJvZHkpIHtcbiAgICBpZiAodHlwZW9mIGJvZHkgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgcGFyc2VkO1xuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2UoYm9keSk7XG4gICAgfVxuICAgIGNhdGNoIChwYXJzZUVycm9yKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCEoMCwgdXRpbHNfMS5pc09iamVjdCkocGFyc2VkKSB8fFxuICAgICAgICB0eXBlb2YgcGFyc2VkW1wibWVzc2FnZVwiXSAhPT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAhaXNBUElFcnJvckNvZGUocGFyc2VkW1wiY29kZVwiXSkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5wYXJzZWQsXG4gICAgICAgIGNvZGU6IHBhcnNlZFtcImNvZGVcIl0sXG4gICAgICAgIG1lc3NhZ2U6IHBhcnNlZFtcIm1lc3NhZ2VcIl0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGlzQVBJRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gdHlwZW9mIGNvZGUgPT09IFwic3RyaW5nXCIgJiYgY29kZSBpbiBhcGlFcnJvckNvZGVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.iteratePaginatedAPI = iteratePaginatedAPI;\nexports.collectPaginatedAPI = collectPaginatedAPI;\nexports.isFullBlock = isFullBlock;\nexports.isFullPage = isFullPage;\nexports.isFullDatabase = isFullDatabase;\nexports.isFullPageOrDatabase = isFullPageOrDatabase;\nexports.isFullUser = isFullUser;\nexports.isFullComment = isFullComment;\nexports.isTextRichTextItemResponse = isTextRichTextItemResponse;\nexports.isEquationRichTextItemResponse = isEquationRichTextItemResponse;\nexports.isMentionRichTextItemResponse = isMentionRichTextItemResponse;\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function* iteratePaginatedAPI(listFn, firstPageArgs) {\n    let nextCursor = firstPageArgs.start_cursor;\n    do {\n        const response = await listFn({\n            ...firstPageArgs,\n            start_cursor: nextCursor,\n        });\n        yield* response.results;\n        nextCursor = response.next_cursor;\n    } while (nextCursor);\n}\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = await collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function collectPaginatedAPI(listFn, firstPageArgs) {\n    const results = [];\n    for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n        results.push(item);\n    }\n    return results;\n}\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nfunction isFullBlock(response) {\n    return response.object === \"block\" && \"type\" in response;\n}\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nfunction isFullPage(response) {\n    return response.object === \"page\" && \"url\" in response;\n}\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nfunction isFullDatabase(response) {\n    return response.object === \"database\" && \"title\" in response;\n}\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse` or a full\n * `PageObjectResponse`.\n */\nfunction isFullPageOrDatabase(response) {\n    if (response.object === \"database\") {\n        return isFullDatabase(response);\n    }\n    else {\n        return isFullPage(response);\n    }\n}\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nfunction isFullUser(response) {\n    return \"type\" in response;\n}\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nfunction isFullComment(response) {\n    return \"created_by\" in response;\n}\n/**\n * @returns `true` if `richText` is a `TextRichTextItemResponse`.\n */\nfunction isTextRichTextItemResponse(richText) {\n    return richText.type === \"text\";\n}\n/**\n * @returns `true` if `richText` is an `EquationRichTextItemResponse`.\n */\nfunction isEquationRichTextItemResponse(richText) {\n    return richText.type === \"equation\";\n}\n/**\n * @returns `true` if `richText` is an `MentionRichTextItemResponse`.\n */\nfunction isMentionRichTextItemResponse(richText) {\n    return richText.type === \"mention\";\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsMkJBQTJCO0FBQzNCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixrQkFBa0I7QUFDbEIscUJBQXFCO0FBQ3JCLGtDQUFrQztBQUNsQyxzQ0FBc0M7QUFDdEMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywyQkFBMkI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMkJBQTJCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzLmJpbGxvcmRvXFxQeWNoYXJtUHJvamVjdHNcXFdoYXN0YXBwTm90aW9uXFxub2RlX21vZHVsZXNcXEBub3Rpb25ocVxcY2xpZW50XFxidWlsZFxcc3JjXFxoZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pdGVyYXRlUGFnaW5hdGVkQVBJID0gaXRlcmF0ZVBhZ2luYXRlZEFQSTtcbmV4cG9ydHMuY29sbGVjdFBhZ2luYXRlZEFQSSA9IGNvbGxlY3RQYWdpbmF0ZWRBUEk7XG5leHBvcnRzLmlzRnVsbEJsb2NrID0gaXNGdWxsQmxvY2s7XG5leHBvcnRzLmlzRnVsbFBhZ2UgPSBpc0Z1bGxQYWdlO1xuZXhwb3J0cy5pc0Z1bGxEYXRhYmFzZSA9IGlzRnVsbERhdGFiYXNlO1xuZXhwb3J0cy5pc0Z1bGxQYWdlT3JEYXRhYmFzZSA9IGlzRnVsbFBhZ2VPckRhdGFiYXNlO1xuZXhwb3J0cy5pc0Z1bGxVc2VyID0gaXNGdWxsVXNlcjtcbmV4cG9ydHMuaXNGdWxsQ29tbWVudCA9IGlzRnVsbENvbW1lbnQ7XG5leHBvcnRzLmlzVGV4dFJpY2hUZXh0SXRlbVJlc3BvbnNlID0gaXNUZXh0UmljaFRleHRJdGVtUmVzcG9uc2U7XG5leHBvcnRzLmlzRXF1YXRpb25SaWNoVGV4dEl0ZW1SZXNwb25zZSA9IGlzRXF1YXRpb25SaWNoVGV4dEl0ZW1SZXNwb25zZTtcbmV4cG9ydHMuaXNNZW50aW9uUmljaFRleHRJdGVtUmVzcG9uc2UgPSBpc01lbnRpb25SaWNoVGV4dEl0ZW1SZXNwb25zZTtcbi8qKlxuICogUmV0dXJucyBhbiBhc3luYyBpdGVyYXRvciBvdmVyIHRoZSByZXN1bHRzIG9mIGFueSBwYWdpbmF0ZWQgTm90aW9uIEFQSS5cbiAqXG4gKiBFeGFtcGxlIChnaXZlbiBhIG5vdGlvbiBDbGllbnQgY2FsbGVkIGBub3Rpb25gKTpcbiAqXG4gKiBgYGBcbiAqIGZvciBhd2FpdCAoY29uc3QgYmxvY2sgb2YgaXRlcmF0ZVBhZ2luYXRlZEFQSShub3Rpb24uYmxvY2tzLmNoaWxkcmVuLmxpc3QsIHtcbiAqICAgYmxvY2tfaWQ6IHBhcmVudEJsb2NrSWQsXG4gKiB9KSkge1xuICogICAvLyBEbyBzb21ldGhpbmcgd2l0aCBibG9jay5cbiAqIH1cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBsaXN0Rm4gQSBib3VuZCBmdW5jdGlvbiBvbiB0aGUgTm90aW9uIGNsaWVudCB0aGF0IHJlcHJlc2VudHMgYSBjb25mb3JtaW5nIHBhZ2luYXRlZFxuICogICBBUEkuIEV4YW1wbGU6IGBub3Rpb24uYmxvY2tzLmNoaWxkcmVuLmxpc3RgLlxuICogQHBhcmFtIGZpcnN0UGFnZUFyZ3MgQXJndW1lbnRzIHRoYXQgc2hvdWxkIGJlIHBhc3NlZCB0byB0aGUgQVBJIG9uIHRoZSBmaXJzdCBhbmQgc3Vic2VxdWVudFxuICogICBjYWxscyB0byB0aGUgQVBJLiBBbnkgbmVjZXNzYXJ5IGBuZXh0X2N1cnNvcmAgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHBvcHVsYXRlZCBieVxuICogICB0aGlzIGZ1bmN0aW9uLiBFeGFtcGxlOiBgeyBibG9ja19pZDogXCI8bXkgYmxvY2sgaWQ+XCIgfWBcbiAqL1xuYXN5bmMgZnVuY3Rpb24qIGl0ZXJhdGVQYWdpbmF0ZWRBUEkobGlzdEZuLCBmaXJzdFBhZ2VBcmdzKSB7XG4gICAgbGV0IG5leHRDdXJzb3IgPSBmaXJzdFBhZ2VBcmdzLnN0YXJ0X2N1cnNvcjtcbiAgICBkbyB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbGlzdEZuKHtcbiAgICAgICAgICAgIC4uLmZpcnN0UGFnZUFyZ3MsXG4gICAgICAgICAgICBzdGFydF9jdXJzb3I6IG5leHRDdXJzb3IsXG4gICAgICAgIH0pO1xuICAgICAgICB5aWVsZCogcmVzcG9uc2UucmVzdWx0cztcbiAgICAgICAgbmV4dEN1cnNvciA9IHJlc3BvbnNlLm5leHRfY3Vyc29yO1xuICAgIH0gd2hpbGUgKG5leHRDdXJzb3IpO1xufVxuLyoqXG4gKiBDb2xsZWN0IGFsbCBvZiB0aGUgcmVzdWx0cyBvZiBwYWdpbmF0aW5nIGFuIEFQSSBpbnRvIGFuIGluLW1lbW9yeSBhcnJheS5cbiAqXG4gKiBFeGFtcGxlIChnaXZlbiBhIG5vdGlvbiBDbGllbnQgY2FsbGVkIGBub3Rpb25gKTpcbiAqXG4gKiBgYGBcbiAqIGNvbnN0IGJsb2NrcyA9IGF3YWl0IGNvbGxlY3RQYWdpbmF0ZWRBUEkobm90aW9uLmJsb2Nrcy5jaGlsZHJlbi5saXN0LCB7XG4gKiAgIGJsb2NrX2lkOiBwYXJlbnRCbG9ja0lkLFxuICogfSlcbiAqIC8vIERvIHNvbWV0aGluZyB3aXRoIGJsb2Nrcy5cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBsaXN0Rm4gQSBib3VuZCBmdW5jdGlvbiBvbiB0aGUgTm90aW9uIGNsaWVudCB0aGF0IHJlcHJlc2VudHMgYSBjb25mb3JtaW5nIHBhZ2luYXRlZFxuICogICBBUEkuIEV4YW1wbGU6IGBub3Rpb24uYmxvY2tzLmNoaWxkcmVuLmxpc3RgLlxuICogQHBhcmFtIGZpcnN0UGFnZUFyZ3MgQXJndW1lbnRzIHRoYXQgc2hvdWxkIGJlIHBhc3NlZCB0byB0aGUgQVBJIG9uIHRoZSBmaXJzdCBhbmQgc3Vic2VxdWVudFxuICogICBjYWxscyB0byB0aGUgQVBJLiBBbnkgbmVjZXNzYXJ5IGBuZXh0X2N1cnNvcmAgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHBvcHVsYXRlZCBieVxuICogICB0aGlzIGZ1bmN0aW9uLiBFeGFtcGxlOiBgeyBibG9ja19pZDogXCI8bXkgYmxvY2sgaWQ+XCIgfWBcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29sbGVjdFBhZ2luYXRlZEFQSShsaXN0Rm4sIGZpcnN0UGFnZUFyZ3MpIHtcbiAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgZm9yIGF3YWl0IChjb25zdCBpdGVtIG9mIGl0ZXJhdGVQYWdpbmF0ZWRBUEkobGlzdEZuLCBmaXJzdFBhZ2VBcmdzKSkge1xuICAgICAgICByZXN1bHRzLnB1c2goaXRlbSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xufVxuLyoqXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgYHJlc3BvbnNlYCBpcyBhIGZ1bGwgYEJsb2NrT2JqZWN0UmVzcG9uc2VgLlxuICovXG5mdW5jdGlvbiBpc0Z1bGxCbG9jayhyZXNwb25zZSkge1xuICAgIHJldHVybiByZXNwb25zZS5vYmplY3QgPT09IFwiYmxvY2tcIiAmJiBcInR5cGVcIiBpbiByZXNwb25zZTtcbn1cbi8qKlxuICogQHJldHVybnMgYHRydWVgIGlmIGByZXNwb25zZWAgaXMgYSBmdWxsIGBQYWdlT2JqZWN0UmVzcG9uc2VgLlxuICovXG5mdW5jdGlvbiBpc0Z1bGxQYWdlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlLm9iamVjdCA9PT0gXCJwYWdlXCIgJiYgXCJ1cmxcIiBpbiByZXNwb25zZTtcbn1cbi8qKlxuICogQHJldHVybnMgYHRydWVgIGlmIGByZXNwb25zZWAgaXMgYSBmdWxsIGBEYXRhYmFzZU9iamVjdFJlc3BvbnNlYC5cbiAqL1xuZnVuY3Rpb24gaXNGdWxsRGF0YWJhc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gcmVzcG9uc2Uub2JqZWN0ID09PSBcImRhdGFiYXNlXCIgJiYgXCJ0aXRsZVwiIGluIHJlc3BvbnNlO1xufVxuLyoqXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgYHJlc3BvbnNlYCBpcyBhIGZ1bGwgYERhdGFiYXNlT2JqZWN0UmVzcG9uc2VgIG9yIGEgZnVsbFxuICogYFBhZ2VPYmplY3RSZXNwb25zZWAuXG4gKi9cbmZ1bmN0aW9uIGlzRnVsbFBhZ2VPckRhdGFiYXNlKHJlc3BvbnNlKSB7XG4gICAgaWYgKHJlc3BvbnNlLm9iamVjdCA9PT0gXCJkYXRhYmFzZVwiKSB7XG4gICAgICAgIHJldHVybiBpc0Z1bGxEYXRhYmFzZShyZXNwb25zZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gaXNGdWxsUGFnZShyZXNwb25zZSk7XG4gICAgfVxufVxuLyoqXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgYHJlc3BvbnNlYCBpcyBhIGZ1bGwgYFVzZXJPYmplY3RSZXNwb25zZWAuXG4gKi9cbmZ1bmN0aW9uIGlzRnVsbFVzZXIocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gXCJ0eXBlXCIgaW4gcmVzcG9uc2U7XG59XG4vKipcbiAqIEByZXR1cm5zIGB0cnVlYCBpZiBgcmVzcG9uc2VgIGlzIGEgZnVsbCBgQ29tbWVudE9iamVjdFJlc3BvbnNlYC5cbiAqL1xuZnVuY3Rpb24gaXNGdWxsQ29tbWVudChyZXNwb25zZSkge1xuICAgIHJldHVybiBcImNyZWF0ZWRfYnlcIiBpbiByZXNwb25zZTtcbn1cbi8qKlxuICogQHJldHVybnMgYHRydWVgIGlmIGByaWNoVGV4dGAgaXMgYSBgVGV4dFJpY2hUZXh0SXRlbVJlc3BvbnNlYC5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0UmljaFRleHRJdGVtUmVzcG9uc2UocmljaFRleHQpIHtcbiAgICByZXR1cm4gcmljaFRleHQudHlwZSA9PT0gXCJ0ZXh0XCI7XG59XG4vKipcbiAqIEByZXR1cm5zIGB0cnVlYCBpZiBgcmljaFRleHRgIGlzIGFuIGBFcXVhdGlvblJpY2hUZXh0SXRlbVJlc3BvbnNlYC5cbiAqL1xuZnVuY3Rpb24gaXNFcXVhdGlvblJpY2hUZXh0SXRlbVJlc3BvbnNlKHJpY2hUZXh0KSB7XG4gICAgcmV0dXJuIHJpY2hUZXh0LnR5cGUgPT09IFwiZXF1YXRpb25cIjtcbn1cbi8qKlxuICogQHJldHVybnMgYHRydWVgIGlmIGByaWNoVGV4dGAgaXMgYW4gYE1lbnRpb25SaWNoVGV4dEl0ZW1SZXNwb25zZWAuXG4gKi9cbmZ1bmN0aW9uIGlzTWVudGlvblJpY2hUZXh0SXRlbVJlc3BvbnNlKHJpY2hUZXh0KSB7XG4gICAgcmV0dXJuIHJpY2hUZXh0LnR5cGUgPT09IFwibWVudGlvblwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * index.ts\n *\n * This file is the entry point for the Notion SDK.\n * It exports the Client class and all the API endpoints.\n *\n * @packageDocumentation\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isFullPageOrDatabase = exports.isFullComment = exports.isFullUser = exports.isFullPage = exports.isFullDatabase = exports.isFullBlock = exports.iteratePaginatedAPI = exports.collectPaginatedAPI = exports.isNotionClientError = exports.RequestTimeoutError = exports.UnknownHTTPResponseError = exports.APIResponseError = exports.ClientErrorCode = exports.APIErrorCode = exports.LogLevel = exports.Client = void 0;\nvar Client_1 = __webpack_require__(/*! ./Client */ \"(rsc)/./node_modules/@notionhq/client/build/src/Client.js\");\nObject.defineProperty(exports, \"Client\", ({ enumerable: true, get: function () { return Client_1.default; } }));\nvar logging_1 = __webpack_require__(/*! ./logging */ \"(rsc)/./node_modules/@notionhq/client/build/src/logging.js\");\nObject.defineProperty(exports, \"LogLevel\", ({ enumerable: true, get: function () { return logging_1.LogLevel; } }));\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@notionhq/client/build/src/errors.js\");\nObject.defineProperty(exports, \"APIErrorCode\", ({ enumerable: true, get: function () { return errors_1.APIErrorCode; } }));\nObject.defineProperty(exports, \"ClientErrorCode\", ({ enumerable: true, get: function () { return errors_1.ClientErrorCode; } }));\nObject.defineProperty(exports, \"APIResponseError\", ({ enumerable: true, get: function () { return errors_1.APIResponseError; } }));\nObject.defineProperty(exports, \"UnknownHTTPResponseError\", ({ enumerable: true, get: function () { return errors_1.UnknownHTTPResponseError; } }));\nObject.defineProperty(exports, \"RequestTimeoutError\", ({ enumerable: true, get: function () { return errors_1.RequestTimeoutError; } }));\n// Error helpers\nObject.defineProperty(exports, \"isNotionClientError\", ({ enumerable: true, get: function () { return errors_1.isNotionClientError; } }));\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/@notionhq/client/build/src/helpers.js\");\nObject.defineProperty(exports, \"collectPaginatedAPI\", ({ enumerable: true, get: function () { return helpers_1.collectPaginatedAPI; } }));\nObject.defineProperty(exports, \"iteratePaginatedAPI\", ({ enumerable: true, get: function () { return helpers_1.iteratePaginatedAPI; } }));\nObject.defineProperty(exports, \"isFullBlock\", ({ enumerable: true, get: function () { return helpers_1.isFullBlock; } }));\nObject.defineProperty(exports, \"isFullDatabase\", ({ enumerable: true, get: function () { return helpers_1.isFullDatabase; } }));\nObject.defineProperty(exports, \"isFullPage\", ({ enumerable: true, get: function () { return helpers_1.isFullPage; } }));\nObject.defineProperty(exports, \"isFullUser\", ({ enumerable: true, get: function () { return helpers_1.isFullUser; } }));\nObject.defineProperty(exports, \"isFullComment\", ({ enumerable: true, get: function () { return helpers_1.isFullComment; } }));\nObject.defineProperty(exports, \"isFullPageOrDatabase\", ({ enumerable: true, get: function () { return helpers_1.isFullPageOrDatabase; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHFCQUFxQixHQUFHLGtCQUFrQixHQUFHLGtCQUFrQixHQUFHLHNCQUFzQixHQUFHLG1CQUFtQixHQUFHLDJCQUEyQixHQUFHLDJCQUEyQixHQUFHLDJCQUEyQixHQUFHLDJCQUEyQixHQUFHLGdDQUFnQyxHQUFHLHdCQUF3QixHQUFHLHVCQUF1QixHQUFHLG9CQUFvQixHQUFHLGdCQUFnQixHQUFHLGNBQWM7QUFDeFosZUFBZSxtQkFBTyxDQUFDLDJFQUFVO0FBQ2pDLDBDQUF5QyxFQUFFLHFDQUFxQyw0QkFBNEIsRUFBQztBQUM3RyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBVztBQUNuQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDakgsZUFBZSxtQkFBTyxDQUFDLDJFQUFVO0FBQ2pDLGdEQUErQyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUN4SCxtREFBa0QsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDOUgsb0RBQW1ELEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQ2hJLDREQUEyRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUNoSix1REFBc0QsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDdEk7QUFDQSx1REFBc0QsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDdEksZ0JBQWdCLG1CQUFPLENBQUMsNkVBQVc7QUFDbkMsdURBQXNELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3ZJLHVEQUFzRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUN2SSwrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsa0RBQWlELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzdILDhDQUE2QyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUNySCw4Q0FBNkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDckgsaURBQWdELEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQzNILHdEQUF1RCxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUN6SSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzLmJpbGxvcmRvXFxQeWNoYXJtUHJvamVjdHNcXFdoYXN0YXBwTm90aW9uXFxub2RlX21vZHVsZXNcXEBub3Rpb25ocVxcY2xpZW50XFxidWlsZFxcc3JjXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogaW5kZXgudHNcbiAqXG4gKiBUaGlzIGZpbGUgaXMgdGhlIGVudHJ5IHBvaW50IGZvciB0aGUgTm90aW9uIFNESy5cbiAqIEl0IGV4cG9ydHMgdGhlIENsaWVudCBjbGFzcyBhbmQgYWxsIHRoZSBBUEkgZW5kcG9pbnRzLlxuICpcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzRnVsbFBhZ2VPckRhdGFiYXNlID0gZXhwb3J0cy5pc0Z1bGxDb21tZW50ID0gZXhwb3J0cy5pc0Z1bGxVc2VyID0gZXhwb3J0cy5pc0Z1bGxQYWdlID0gZXhwb3J0cy5pc0Z1bGxEYXRhYmFzZSA9IGV4cG9ydHMuaXNGdWxsQmxvY2sgPSBleHBvcnRzLml0ZXJhdGVQYWdpbmF0ZWRBUEkgPSBleHBvcnRzLmNvbGxlY3RQYWdpbmF0ZWRBUEkgPSBleHBvcnRzLmlzTm90aW9uQ2xpZW50RXJyb3IgPSBleHBvcnRzLlJlcXVlc3RUaW1lb3V0RXJyb3IgPSBleHBvcnRzLlVua25vd25IVFRQUmVzcG9uc2VFcnJvciA9IGV4cG9ydHMuQVBJUmVzcG9uc2VFcnJvciA9IGV4cG9ydHMuQ2xpZW50RXJyb3JDb2RlID0gZXhwb3J0cy5BUElFcnJvckNvZGUgPSBleHBvcnRzLkxvZ0xldmVsID0gZXhwb3J0cy5DbGllbnQgPSB2b2lkIDA7XG52YXIgQ2xpZW50XzEgPSByZXF1aXJlKFwiLi9DbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENsaWVudF8xLmRlZmF1bHQ7IH0gfSk7XG52YXIgbG9nZ2luZ18xID0gcmVxdWlyZShcIi4vbG9nZ2luZ1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ0xldmVsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsb2dnaW5nXzEuTG9nTGV2ZWw7IH0gfSk7XG52YXIgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBUElFcnJvckNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkFQSUVycm9yQ29kZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNsaWVudEVycm9yQ29kZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuQ2xpZW50RXJyb3JDb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQVBJUmVzcG9uc2VFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuQVBJUmVzcG9uc2VFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVua25vd25IVFRQUmVzcG9uc2VFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuVW5rbm93bkhUVFBSZXNwb25zZUVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVxdWVzdFRpbWVvdXRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuUmVxdWVzdFRpbWVvdXRFcnJvcjsgfSB9KTtcbi8vIEVycm9yIGhlbHBlcnNcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTm90aW9uQ2xpZW50RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLmlzTm90aW9uQ2xpZW50RXJyb3I7IH0gfSk7XG52YXIgaGVscGVyc18xID0gcmVxdWlyZShcIi4vaGVscGVyc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbGxlY3RQYWdpbmF0ZWRBUElcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhlbHBlcnNfMS5jb2xsZWN0UGFnaW5hdGVkQVBJOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXRlcmF0ZVBhZ2luYXRlZEFQSVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGVscGVyc18xLml0ZXJhdGVQYWdpbmF0ZWRBUEk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0Z1bGxCbG9ja1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGVscGVyc18xLmlzRnVsbEJsb2NrOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNGdWxsRGF0YWJhc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhlbHBlcnNfMS5pc0Z1bGxEYXRhYmFzZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzRnVsbFBhZ2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhlbHBlcnNfMS5pc0Z1bGxQYWdlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNGdWxsVXNlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGVscGVyc18xLmlzRnVsbFVzZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0Z1bGxDb21tZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoZWxwZXJzXzEuaXNGdWxsQ29tbWVudDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzRnVsbFBhZ2VPckRhdGFiYXNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoZWxwZXJzXzEuaXNGdWxsUGFnZU9yRGF0YWJhc2U7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/logging.js":
/*!************************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/logging.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LogLevel = void 0;\nexports.makeConsoleLogger = makeConsoleLogger;\nexports.logLevelSeverity = logLevelSeverity;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@notionhq/client/build/src/utils.js\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel || (exports.LogLevel = LogLevel = {}));\nfunction makeConsoleLogger(name) {\n    return (level, message, extraInfo) => {\n        console[level](`${name} ${level}:`, message, extraInfo);\n    };\n}\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n    switch (level) {\n        case LogLevel.DEBUG:\n            return 20;\n        case LogLevel.INFO:\n            return 40;\n        case LogLevel.WARN:\n            return 60;\n        case LogLevel.ERROR:\n            return 80;\n        default:\n            return (0, utils_1.assertNever)(level);\n    }\n}\n//# sourceMappingURL=logging.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIseUJBQXlCO0FBQ3pCLHdCQUF3QjtBQUN4QixnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGVBQWUsZ0JBQWdCLGdCQUFnQjtBQUNoRDtBQUNBO0FBQ0EsMEJBQTBCLE1BQU0sRUFBRSxNQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccy5iaWxsb3Jkb1xcUHljaGFybVByb2plY3RzXFxXaGFzdGFwcE5vdGlvblxcbm9kZV9tb2R1bGVzXFxAbm90aW9uaHFcXGNsaWVudFxcYnVpbGRcXHNyY1xcbG9nZ2luZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nTGV2ZWwgPSB2b2lkIDA7XG5leHBvcnRzLm1ha2VDb25zb2xlTG9nZ2VyID0gbWFrZUNvbnNvbGVMb2dnZXI7XG5leHBvcnRzLmxvZ0xldmVsU2V2ZXJpdHkgPSBsb2dMZXZlbFNldmVyaXR5O1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xudmFyIExvZ0xldmVsO1xuKGZ1bmN0aW9uIChMb2dMZXZlbCkge1xuICAgIExvZ0xldmVsW1wiREVCVUdcIl0gPSBcImRlYnVnXCI7XG4gICAgTG9nTGV2ZWxbXCJJTkZPXCJdID0gXCJpbmZvXCI7XG4gICAgTG9nTGV2ZWxbXCJXQVJOXCJdID0gXCJ3YXJuXCI7XG4gICAgTG9nTGV2ZWxbXCJFUlJPUlwiXSA9IFwiZXJyb3JcIjtcbn0pKExvZ0xldmVsIHx8IChleHBvcnRzLkxvZ0xldmVsID0gTG9nTGV2ZWwgPSB7fSkpO1xuZnVuY3Rpb24gbWFrZUNvbnNvbGVMb2dnZXIobmFtZSkge1xuICAgIHJldHVybiAobGV2ZWwsIG1lc3NhZ2UsIGV4dHJhSW5mbykgPT4ge1xuICAgICAgICBjb25zb2xlW2xldmVsXShgJHtuYW1lfSAke2xldmVsfTpgLCBtZXNzYWdlLCBleHRyYUluZm8pO1xuICAgIH07XG59XG4vKipcbiAqIFRyYW5zZm9ybXMgYSBsb2cgbGV2ZWwgaW50byBhIGNvbXBhcmFibGUgKG51bWVyaWNhbCkgdmFsdWUgb3JkZXJlZCBieSBzZXZlcml0eS5cbiAqL1xuZnVuY3Rpb24gbG9nTGV2ZWxTZXZlcml0eShsZXZlbCkge1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5ERUJVRzpcbiAgICAgICAgICAgIHJldHVybiAyMDtcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5JTkZPOlxuICAgICAgICAgICAgcmV0dXJuIDQwO1xuICAgICAgICBjYXNlIExvZ0xldmVsLldBUk46XG4gICAgICAgICAgICByZXR1cm4gNjA7XG4gICAgICAgIGNhc2UgTG9nTGV2ZWwuRVJST1I6XG4gICAgICAgICAgICByZXR1cm4gODA7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuYXNzZXJ0TmV2ZXIpKGxldmVsKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@notionhq/client/build/src/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@notionhq/client/build/src/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertNever = assertNever;\nexports.pick = pick;\nexports.isObject = isObject;\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nfunction assertNever(value) {\n    throw new Error(`Unexpected value should never occur: ${value}`);\n}\nfunction pick(base, keys) {\n    const entries = keys.map(key => [key, base === null || base === void 0 ? void 0 : base[key]]);\n    return Object.fromEntries(entries);\n}\nfunction isObject(o) {\n    return typeof o === \"object\" && o !== null;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLFlBQVk7QUFDWixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxNQUFNO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzLmJpbGxvcmRvXFxQeWNoYXJtUHJvamVjdHNcXFdoYXN0YXBwTm90aW9uXFxub2RlX21vZHVsZXNcXEBub3Rpb25ocVxcY2xpZW50XFxidWlsZFxcc3JjXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0TmV2ZXIgPSBhc3NlcnROZXZlcjtcbmV4cG9ydHMucGljayA9IHBpY2s7XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG4vKipcbiAqIFV0aWxpdHkgZm9yIGVuZm9yY2luZyBleGhhdXN0aXZlbmVzcyBjaGVja3MgaW4gdGhlIHR5cGUgc3lzdGVtLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9iYXNhcmF0LmdpdGJvb2suaW8vdHlwZXNjcmlwdC90eXBlLXN5c3RlbS9kaXNjcmltaW5hdGVkLXVuaW9ucyN0aHJvdy1pbi1leGhhdXN0aXZlLWNoZWNrc1xuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgdmFyaWFibGUgd2l0aCBubyByZW1haW5pbmcgdmFsdWVzXG4gKi9cbmZ1bmN0aW9uIGFzc2VydE5ldmVyKHZhbHVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHZhbHVlIHNob3VsZCBuZXZlciBvY2N1cjogJHt2YWx1ZX1gKTtcbn1cbmZ1bmN0aW9uIHBpY2soYmFzZSwga2V5cykge1xuICAgIGNvbnN0IGVudHJpZXMgPSBrZXlzLm1hcChrZXkgPT4gW2tleSwgYmFzZSA9PT0gbnVsbCB8fCBiYXNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiYXNlW2tleV1dKTtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKGVudHJpZXMpO1xufVxuZnVuY3Rpb24gaXNPYmplY3Qobykge1xuICAgIHJldHVybiB0eXBlb2YgbyA9PT0gXCJvYmplY3RcIiAmJiBvICE9PSBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@notionhq/client/build/src/utils.js\n");

/***/ })

};
;